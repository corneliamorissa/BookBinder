#define the base docker image file used for all jobs
image: composer:2.5
  # Before we start any job, prepare the container with some extra configuration
  # e.g. setting the ssh credentials, so we can later copy to shell.studev.groept.be
before_script:
    # create a local .ssh folder in the container
  - mkdir -p ~/.ssh
    # start the ssh-agent and add the private key to the system
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
    # add the fingerprint for shell.studev.groept.be as a trusted host
  - ssh-keyscan shell.studev.groept.be > ~/.ssh/known_hosts
    # install rsync to copy files to the web server
    # this container runs Alpine Linux, where apk is the package manager (not apt-get)
  - apk add rsync
stages:
  - test
  - deploy
test-job:
  stage: test
  services: 
    - mysql:8
  variables:
    MYSQL_DATABASE: main_test
    MYSQL_USER: user
    MYSQL_ROOT_PASSWORD: root_pass
    MYSQL_PASSWORD: root_pass
    DATABASE_URL: "mysql://root:root_pass@mysql/main"
  script:
    - cd BookBinder ; composer install
 # run the migration on the temporary database
    - cd BookBinder ; php bin/console doctrine:migrations:migrate --env=test
 # load some test data in the temporary database
    - cd BookBinder ; php bin/console doctrine:fixtures:load -n
 # run the tests (using the temporary database)
    - cd BookBinder ; php bin/phpunit

deploy-job:
  stage: deploy
# Every job will start a container with a clone from the current repo
  # run this job only when there is a push on the master branch
  only:
    - master
  script:
    - cd BookBinder ; composer install
    # rsync is a copy/sync tool we use to copy the current folder ./ to studev
    # we ignore the .git folder and the .env file
    # we delete the files on the remote server that are not present in the local copy
    - rsync -rv --exclude=".git/"
                --exclude=".env"
                --delete
                ./ a22web13@shell.studev.groept.be:/var/www/html